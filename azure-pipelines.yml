trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'wordpress'
  appName: 'wordpresslc'
  resourceGroup: 'wordpresslc'
  packagePath: '$(Build.ArtifactStagingDirectory)/wordpress.zip'

steps:
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/wordpress.zip'
    replaceExistingArchive: true

- task: AzureWebApp@1
  inputs:
    azureSubscription: '$(azureSubscription)'
    appType: 'webAppLinux'
    appName: '$(appName)'
    resourceGroupName: '$(resourceGroup)'
    package: '$(packagePath)'

# ✅ Use AzureCLI@2 for PHP version setup
- task: AzureCLI@2
  inputs:
    azureSubscription: '$(azureSubscription)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Setting PHP version to 8.0"
      az webapp config set --name $(appName) --resource-group $(resourceGroup) --linux-fx-version "PHP|8.0"
  displayName: "Set PHP version for WordPress"

# ✅ Use AzureCLI@2 for enabling MySQL extension
- task: AzureCLI@2
  inputs:
    azureSubscription: '$(azureSubscription)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "Enabling MySQL extension"
      az webapp config appsettings set --name $(appName) --resource-group $(resourceGroup) --settings WEBSITE_MYSQL_ENABLED=1
  displayName: "Enable MySQL Extension for WordPress"
